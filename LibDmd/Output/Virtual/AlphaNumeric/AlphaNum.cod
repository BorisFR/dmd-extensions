//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float NumChars;
//   float NumLines;
//   float SegmentWidth;
//   float TargetHeight;
//   float TargetWidth;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   SegmentWidth c0       1
//   TargetWidth  c1       1
//   TargetHeight c2       1
//   NumLines     c3       1
//   NumChars     c4       1
//

    ps_3_0
    def c5, 1.39999998, 0.699999988, 2.79999995, 1
    def c6, -0.00100000005, -999.999939, 0, 0
    def c7, 4, 1.39999998, 0.5, -1
    def c8, 0, -2, 3, 2
    def c9, 0, -1, 0.5, 0.699999988
    def c10, 0, -1, -0.5, 1
    def c11, 0.5, -0.5, -0.100000024, -0.75
    def c12, -0.5, -1, 0.5, 0
    defi i0, 255, 0, 0, 0
    dcl vPos.xy  // fragCoord<0,1>

#line 28 "C:\Development\dmd-extensions\LibDmd\Output\Virtual\AlphaNumeric\AlphaNum.fx"
    mov r0, c10
    mul r1.xy, r0, c0.x
    mad r1.zw, c0.x, r0.xyxy, r0.xyzx
    add r1.zw, r1, c10.xyxw  // ::dtl<0,1>
    mov r2.x, c0.x  // ::SegmentWidth<0>
    mad r2.yz, r2.x, c9.xxyw, c9.xzxw
    add r2.yz, r2, c10.xxww  // ::dtr<0,1>

#line 60
    mul r3.xy, r2.x, c9.wxzw

#line 32
    mad r3.zw, c0.x, r0.xyxw, r0.xyzx
    add r3.zw, r3, c10.xyxy  // ::dbl<0,1>
    mad r4.xy, c0.x, r0_abs, r0_abs.zxzw
    add r4.xy, r4, c10  // ::dbr<0,1>

#line 59
    mul r5.xyz, r2.x, c5  // ::gSegmentGap<0>, ::ba<0>

#line 35
    mad r4.zw, r2.x, c7.xyxy, c7  // ::dp<0,1>

#line 104
    rcp r0.z, c4.x  // ::cellSize<0>
    rcp r2.w, c3.x

#line 109
    mad r6.x, r0.z, c11.x, c11.y  // ::originPos<0>

#line 114
    rcp r5.w, c1.x
    mad r7.xz, vPos.x, r5.w, c10.z  // ::uv<0,0>
    rcp r5.w, c2.x
    dp2add r7.yw, vPos.y, r5.w, c10.y  // ::uv<1,1>

#line 59
    mul r5.w, r5.y, r5.y
    rcp r5.w, r5.w

#line 69
    mul r6.zw, r2.x, c11

#line 60
    rcp r6.z, r6.z

#line 66
    mad r3.zw, c0.x, -r0.xyxy, r3  // ::ba<0,1>

#line 69
    rcp r6.w, r6.w

#line 51
    mad r8.xy, r2.x, -c5.zxzw, c5.w

#line 66
    mad r4.xy, c0.x, -r0, r4  // ::ba<0,1>
    mad r8.zw, c0.x, r0.xyxw, -r2.xyyz  // ::ba<0,1>
    mad r0.xy, c0.x, r0.xwzw, -r1.zwzw  // ::ba<0,1>

#line 123
    mov r9.xz, c4.x
    mov r9.yw, c3.x
    mov r10.x, r6.x  // ::pos<0>
    mov r10.yzw, c10.x  // ::d<0>, ::pos<1>, ::currLine<0>
    rep i0
      break_ge r10.w, c3.x
      mov r11.yw, r10.z
      mov r12.xy, r10  // ::pos<0>, ::d<0>
      mov r12.z, c10.x  // ::character<0>
      rep i0
        break_ge r12.z, c4.x
        mov r11.xz, r12.x
        add r13, r7, -r11
        mul r11.xz, r9.zyww, r13.zyww  // SegDisp::p<0,1>

#line 57
        mad r14.xy, r13.zwzw, r9.zwzw, -r4.zwzw  // ::pa<0,1>
        mul r0.w, r5.y, r14.x
        mul r0.w, r5.w, r0.w
        max r12.w, r0.w, r5.z
        min r0.w, r8.x, r12.w  // ::t<0>
        mad r14.xy, r3, -r0.w, r14  // Manhattan::v<0,1>

#line 39
        add r0.w, r14_abs.y, r14_abs.x  // ::Manhattan<0>

#line 60
        add r0.w, r0.w, -c0.x
        mul_sat r0.w, r6.z, r0.w
        mad r12.w, r0.w, c8.y, c8.z
        mul r0.w, r0.w, r0.w
        mul r14.x, r11.x, c8.y
        max r15.x, r14.x, r5.z
        min r14.x, r8.x, r15.x  // ::t<0>
        mad r14.xy, r14.x, -c10.zxzw, r11.xzzw  // Manhattan::v<0,1>

#line 39
        add r14.x, r14_abs.y, r14_abs.x  // ::Manhattan<0>

#line 60
        add r14.x, r14.x, -c0.x
        mul_sat r14.x, r6.z, r14.x
        mad r14.y, r14.x, c8.y, c8.z
        mul r14.x, r14.x, r14.x
        mul r14.x, r14.x, r14.y  // ::ShortLine<0>

#line 76
        mad r0.w, r12.w, r0.w, r14.x  // ::r<0>

#line 65
        mad r14.xy, r13.zwzw, r9.zwzw, -r1  // ::pa<0,1>
        mul r12.w, r14.x, c8.y
        max r14.z, r12.w, r5.z
        min r12.w, r8.x, r14.z  // ::t<0>
        mad r14.zw, r3, -r12.w, r14.xyxy
        mad r12.w, r2.x, -c8.w, r14_abs.w
        mul_sat r12.w, r6.w, r12.w
        mad r14.w, r12.w, c8.y, c8.z
        mul r12.w, r12.w, r12.w
        mul r12.w, r12.w, r14.w
        add r14.z, r14_abs.z, c6.x
        mul r14.z, r14.z, c6.y
        max r15.x, r14.z, c10.x
        mad r14.z, r15.x, c8.y, c8.z
        mul r14.w, r15.x, r15.x
        mul r14.z, r14.w, r14.z

#line 77
        mad r0.w, r12.w, r14.z, r0.w  // ::r<0>

#line 51
        max r12.w, -r11.z, r5.x
        min r14.z, r8.y, r12.w  // ::t<0>
        mad r11.xz, r14.z, -c10.xyyw, r11  // Manhattan::v<0,1>

#line 39
        add r11.x, r11_abs.z, r11_abs.x  // ::Manhattan<0>

#line 52
        add r11.x, r11.x, -c0.x
        mul_sat r11.x, r6.z, r11.x
        mad r11.z, r11.x, c8.y, c8.z
        mul r11.x, r11.x, r11.x

#line 78
        mad r0.w, r11.z, r11.x, r0.w  // ::r<0>

#line 67
        add r11.x, r14.x, r14.x
        max r12.w, r11.x, r5.z
        min r11.x, r8.x, r12.w  // ::t<0>
        mad r11.xz, r4.xyyw, -r11.x, r14.xyyw
        mad r11.z, r2.x, -c8.w, r11_abs.z
        mul_sat r11.z, r6.w, r11.z
        mad r12.w, r11.z, c8.y, c8.z
        mul r11.z, r11.z, r11.z
        mul r11.z, r11.z, r12.w
        add r11.x, r11_abs.x, c6.x
        mul r11.x, r11.x, c6.y
        max r12.w, r11.x, c10.x
        mad r11.x, r12.w, c8.y, c8.z
        mul r12.w, r12.w, r12.w
        mul r11.x, r11.x, r12.w

#line 79
        mad r0.w, r11.z, r11.x, r0.w  // ::r<0>

#line 49
        mad r14, r13.zwzw, r9.zwzw, -c10_abs.xyzx  // ::pa<0,1,0,1>

#line 59
        mul r11.x, r14.z, c8.y
        max r12.w, r11.x, r5.z
        min r11.x, r8.x, r12.w  // ::t<0>
        mad r11.xz, r11.x, -c10.zyxw, r14.zyww  // Manhattan::v<0,1>

#line 39
        add r11.x, r11_abs.z, r11_abs.x  // ::Manhattan<0>

#line 60
        add r11.x, r11.x, -c0.x
        mul_sat r11.x, r6.z, r11.x
        mad r11.z, r11.x, c8.y, c8.z
        mul r11.x, r11.x, r11.x

#line 80
        mad r0.w, r11.z, r11.x, r0.w  // ::r<0>

#line 65
        mad r11.xz, r13.zyww, r9.zyww, -r2.yyzw  // ::pa<0,1>
        mul r12.w, r11.x, c8.y
        max r15.x, r12.w, r5.z
        min r12.w, r8.x, r15.x  // ::t<0>
        mad r11.xz, r8.zyww, -r12.w, r11
        mad r11.z, r2.x, -c8.w, r11_abs.z
        mul_sat r11.z, r6.w, r11.z
        mad r12.w, r11.z, c8.y, c8.z
        mul r11.z, r11.z, r11.z
        mul r11.z, r11.z, r12.w
        add r11.x, r11_abs.x, c6.x
        mul r11.x, r11.x, c6.y
        max r12.w, r11.x, c10.x
        mad r11.x, r12.w, c8.y, c8.z
        mul r12.w, r12.w, r12.w
        mul r11.x, r11.x, r12.w

#line 81
        mad r0.w, r11.z, r11.x, r0.w  // ::r<0>

#line 51
        mad r15, r2.x, -c5.x, -r14.yyww
        cmp r15, r15, -r14.yyww, r5.x
        add r16, -r8.y, r15.yyww
        cmp r15, r16, r8.y, r15  // ::t<0,0,0,0>
        mad r15, r15, -c10.xyxy, r14  // Manhattan::v<0,1,0,1>

#line 39
        add r11.xz, r15_abs.yyww, r15_abs  // ::Manhattan<0,0>

#line 52
        add r11.xz, r11, -c0.x
        mul_sat r11.xz, r6.z, r11
        mad r14.zw, r11.xyxz, c8.y, c8.z
        mul r11.xz, r11, r11

#line 82
        mad r0.w, r14.z, r11.x, r0.w  // ::r<0>

#line 65
        mad r15.xy, r13.zwzw, r9.zwzw, -r1.zwzw  // ::pa<0,1>
        add r11.x, r15.x, r15.x
        max r12.w, r11.x, r5.z
        min r11.x, r8.x, r12.w  // ::t<0>
        mad r15.xy, r0, -r11.x, r15
        mad r11.x, r2.x, -c8.w, r15_abs.y
        mul_sat r11.x, r6.w, r11.x
        mad r12.w, r11.x, c8.y, c8.z
        mul r11.x, r11.x, r11.x
        mul r11.x, r11.x, r12.w
        add r12.w, r15_abs.x, c6.x
        mul r12.w, r12.w, c6.y
        max r14.z, r12.w, c10.x
        mad r12.w, r14.z, c8.y, c8.z
        mul r14.z, r14.z, r14.z
        mul r12.w, r12.w, r14.z

#line 83
        mad r0.w, r11.x, r12.w, r0.w  // ::r<0>

#line 49
        mad r15, r13.zwzw, r9.zwzw, -c10.zxzy  // ::pa<0,1,0,1>
        max r16, r15.yyww, r5.x
        add r17, -r8.y, r16.yyww
        cmp r16, r17, r8.y, r16  // ::t<0,0,0,0>
        mad r15, r16, -c10.xwxw, r15  // Manhattan::v<0,1,0,1>

#line 39
        add r15.xy, r15_abs.ywzw, r15_abs.xzzw  // ::Manhattan<0,0>

#line 52
        add r15.xy, r15, -c0.x
        mul_sat r15.xy, r6.z, r15
        mad r15.zw, r15.xyxy, c8.y, c8.z
        mul r15.xy, r15, r15

#line 84
        mad r0.w, r15.z, r15.x, r0.w  // ::r<0>
        mad r0.w, r15.w, r15.y, r0.w  // ::r<0>

#line 57
        mad r15, r13.zwzw, r9.zwzw, -c9.xyzy  // ::pa<0,1,0,1>
        mul r16, r15.xxzz, c8.y
        mad r17, r15.xxzz, c8.y, -r5.z
        cmp r16, r17, r16, r5.z
        add r17, -r8.x, r16.yyww
        cmp r16, r17, r8.x, r16  // ::t<0,0,0,0>
        mad r15, r16, -c10.zxzx, r15  // Manhattan::v<0,1,0,1>

#line 39
        add r15.xy, r15_abs.ywzw, r15_abs.xzzw  // ::Manhattan<0,0>

#line 60
        add r15.xy, r15, -c0.x
        mul_sat r15.xy, r6.z, r15
        mad r15.zw, r15.xyxy, c8.y, c8.z
        mul r15.xy, r15, r15

#line 86
        mad r0.w, r15.z, r15.x, r0.w  // ::r<0>
        mad r0.w, r15.w, r15.y, r0.w  // ::r<0>
        mad r0.w, r14.w, r11.z, r0.w  // ::r<0>

#line 57
        mad r13, r13, r9, c12.xyzy  // ::pa<0,1,0,1>

#line 51
        max r11.x, -r13.y, r5.x
        min r12.w, r8.y, r11.x  // ::t<0>
        mad r11.xz, r12.w, -c10.xyyw, r13.xyyw  // Manhattan::v<0,1>

#line 39
        add r11.x, r11_abs.z, r11_abs.x  // ::Manhattan<0>

#line 52
        add r11.x, r11.x, -c0.x
        mul_sat r11.x, r6.z, r11.x
        mad r11.z, r11.x, c8.y, c8.z
        mul r11.x, r11.x, r11.x

#line 89
        mad r0.w, r11.z, r11.x, r0.w  // ::r<0>

#line 59
        add r11.x, r14.x, r14.x
        max r12.w, r11.x, r5.z
        min r11.x, r8.x, r12.w  // ::t<0>
        mad r11.xz, r11.x, -c10_abs.zyxw, r14.xyyw  // Manhattan::v<0,1>

#line 39
        add r11.x, r11_abs.z, r11_abs.x  // ::Manhattan<0>

#line 60
        add r11.x, r11.x, -c0.x
        mul_sat r11.x, r6.z, r11.x
        mad r11.z, r11.x, c8.y, c8.z
        mul r11.x, r11.x, r11.x

#line 90
        mad r0.w, r11.z, r11.x, r0.w  // ::r<0>

#line 59
        add r11.x, r13.z, r13.z
        max r12.w, r11.x, r5.z
        min r11.x, r8.x, r12.w  // ::t<0>
        mad r11.xz, r11.x, -c10_abs.zyxw, r13.zyww  // Manhattan::v<0,1>

#line 39
        add r11.x, r11_abs.z, r11_abs.x  // ::Manhattan<0>

#line 60
        add r11.x, r11.x, -c0.x
        mul_sat r11.x, r6.z, r11.x
        mad r11.z, r11.x, c8.y, c8.z
        mul r11.x, r11.x, r11.x

#line 91
        mad r0.w, r11.z, r11.x, r0.w  // ::r<0>

#line 123
        add r12.y, r0.w, r12.y  // ::d<0>
        add r12.x, r0.z, r12.x  // ::pos<0>
        add r12.z, r12.z, c10.w  // ::character<0>

#line 125
      endrep
      mov r6.y, r12.y  // ::d<0>
      mad r10.z, r2.w, -c8.w, r10.z  // ::pos<1>

#line 121
      add r10.w, r10.w, c10.w  // ::currLine<0>

#line 128
      mov r10.xy, r6  // ::pos<0>, ::d<0>
    endrep
    mov_sat oC0.x, r10.y  // ::main<0>

#line 133
    mov oC0.yzw, c10.xxxw  // ::main<1,2,3>

// approximately 244 instruction slots used
